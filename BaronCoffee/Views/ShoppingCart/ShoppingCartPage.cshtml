@{
    ViewBag.Title = "ShoppingCartPage";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}
<style>
    .cart-container {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        margin: 20px auto;
        max-width: 1200px;
        background-color: #ffffff;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .cart-left {
        flex: 2;
        margin-right: 20px;
    }

    .cart-right {
        flex: 1;
        padding: 20px;
        background-color: #fafafa;
        border: 1px solid #ddd;
        border-radius: 8px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .summary-box {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 10px;
        margin-bottom: 20px;
    }

    .action-buttons button {
        width: 100%;
        padding: 10px;
        margin-bottom: 10px;
        border: none;
        background-color: #4B7864;
        color: white;
        font-size: 16px;
        font-weight: bold;
        border-radius: 5px;
        cursor: pointer;
    }

        .action-buttons button:hover {
            background-color: #3a6352;
        }

    h1, h2 {
        text-align: center;
        color: #4B7864;
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        text-align: center;
        padding: 10px;
        border: 1px solid #ddd;
    }

    th {
        background-color: #f5f5f5;
        font-weight: bold;
        color: #333;
    }

    td img {
        width: 80px;
        height: auto;
    }

    td button {
        background-color: red;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        cursor: pointer;
    }

        td button:hover {
            background-color: darkred;
        }
</style>
<div class="cart-container">
    <!-- Bên trái: Danh sách sản phẩm trong giỏ -->
    <div class="cart-left">
        <h1>Giỏ Hàng</h1>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Hình Ảnh</th>
                    <th>Tên Sản Phẩm</th>
                    <th>Giá tiền</th>
                    <th>Số Lượng</th>
                    <th>Thành Tiền</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><img src="~/Content/images/sp1.png" /></td>
                    <td>Cà phê đen</td>
                    <td><input type="text" id="iPrice1" value="20000" readonly class="no-border" /></td>
                    <td><input type="number" id="iQuantity1" value="0" min="0" max="15" oninput="CalculateTotal();" /></td>
                    <td><label id="lbTotal1"></label></td>
                    <td><button type="button" onclick="removeProduct(this)">Xóa</button></td>
                </tr>
            </tbody>
        </table>
    </div>

    <!-- Bên phải: Tổng tiền và các hành động -->
    <div class="cart-right">
        <h2>Tóm Tắt Giỏ Hàng</h2>
        <div class="summary-box">
            <p><strong>Tổng số lượng sản phẩm:</strong> <span id="totalQuantity">0</span></p>
            <p><strong>Tổng tiền:</strong> <span id="grandTotal">0</span> VNĐ</p>
        </div>
        <div class="action-buttons">
            <button type="button" class="btn btn-primary" onclick="addNewProduct()">Thêm sản phẩm mới</button>
            <form action="@Url.Action("Checkout", "ShoppingCart")" method="get" style="margin-top: 10px;">
                <button type="submit" class="btn btn-success">Thanh Toán</button>
            </form>
        </div>
    </div>
</div>



<script>
    let numrows = 2;

    function CalculateTotal() {
        let grandTotal = 0;
        let totalQuantity = 0;
        const rows = document.querySelectorAll(".table tbody tr");
        rows.forEach((row) => {
            const priceElement = row.querySelector(`[id^="iPrice"]`);
            const quantityElement = row.querySelector(`[id^="iQuantity"]`);
            const totalLabel = row.querySelector(`[id^="lbTotal"]`);

            if (priceElement && quantityElement && totalLabel) {
                const price = parseFloat(priceElement.value) || 0;
                const quantity = parseFloat(quantityElement.value) || 0;
                const total = price * quantity;
                totalLabel.innerText = total.toFixed(0);
                grandTotal += total;
                totalQuantity += quantity;
            }
        });

        document.getElementById("grandTotal").innerText = grandTotal.toFixed(0);
        document.getElementById("totalQuantity").innerText = totalQuantity.toFixed(0);
    }

    function addNewProduct() {
        window.location.href = "../Home/ProductsByCategory";
    }

    function removeProduct(button) {
        const row = button.parentElement.parentElement;
        row.remove();
        numrows--;
        CalculateTotal();
    }

    document.addEventListener('DOMContentLoaded', CalculateTotal);
</script>
